{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diego\\\\weeklymplus\\\\src\\\\components\\\\Content.jsx\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction Content({\n  response\n}) {\n  const formatContent = content => {\n    var something;\n    content.json().then(data => ({\n      data: data\n    })).then(res => {\n      return \"???\";\n    });\n  };\n\n  var content = \"\";\n\n  if (response) {\n    if (response.ok) {\n      content = formatContent(response);\n      console.log(response);\n    } else {\n      content = \"there was an error retrieving this character\";\n    }\n  } else {\n    content = \"There will be content over here\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }, content);\n}\n\nexport default Content;","map":{"version":3,"sources":["C:/Users/diego/weeklymplus/src/components/Content.jsx"],"names":["React","useEffect","useState","Content","response","formatContent","content","something","json","then","data","res","ok","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA+B;AAC7B,QAAMC,aAAa,GAAIC,OAAD,IAAa;AACjC,QAAIC,SAAJ;AACAD,IAAAA,OAAO,CACJE,IADH,GAEGC,IAFH,CAESC,IAAD,KAAW;AACfA,MAAAA,IAAI,EAAEA;AADS,KAAX,CAFR,EAKGD,IALH,CAKSE,GAAD,IAAS;AACb,aAAO,KAAP;AACD,KAPH;AAQD,GAVD;;AAYA,MAAIL,OAAO,GAAG,EAAd;;AAEA,MAAIF,QAAJ,EAAc;AACZ,QAAIA,QAAQ,CAACQ,EAAb,EAAiB;AACfN,MAAAA,OAAO,GAAGD,aAAa,CAACD,QAAD,CAAvB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACD,KAHD,MAGO;AACLE,MAAAA,OAAO,GAAG,8CAAV;AACD;AACF,GAPD,MAOO;AACLA,IAAAA,OAAO,GAAG,iCAAV;AACD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,OAAN,CAAP;AACD;;AAED,eAAeH,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Content({ response }) {\r\n  const formatContent = (content) => {\r\n    var something;\r\n    content\r\n      .json()\r\n      .then((data) => ({\r\n        data: data,\r\n      }))\r\n      .then((res) => {\r\n        return \"???\";\r\n      });\r\n  };\r\n\r\n  var content = \"\";\r\n\r\n  if (response) {\r\n    if (response.ok) {\r\n      content = formatContent(response);\r\n      console.log(response);\r\n    } else {\r\n      content = \"there was an error retrieving this character\";\r\n    }\r\n  } else {\r\n    content = \"There will be content over here\";\r\n  }\r\n\r\n  return <div>{content}</div>;\r\n}\r\n\r\nexport default Content;\r\n"]},"metadata":{},"sourceType":"module"}